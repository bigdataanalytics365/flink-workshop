<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.nextbreakpoint</groupId>
    <artifactId>com.nextbreakpoint.flinkworkshop</artifactId>
    <version>1.0.1</version>
    <description>Example of Flink jobs for workshop</description>
    <name>com.nextbreakpoint.flinkworkshop</name>
    <packaging>jar</packaging>
    <licenses>
        <license>
            <name>BSD 3</name>
            <url>http://nextbreakpoint.com/licenses/BSD3</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>Andrea Medeghini</name>
            <email>andrea@nextbreakpoint.com</email>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:git@github.com:nextbreakpoint/flink-workshop.git</connection>
        <developerConnection>scm:git:git@github.com:nextbreakpoint/flink-workshop.git</developerConnection>
        <url>git@github.com:nextbreakpoint/flink-workshop.git</url>
    </scm>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <flink.version>1.7.2</flink.version>
        <httpcore.version>4.4.4</httpcore.version>
        <httpclient.version>4.5.3</httpclient.version>
        <kafka_2.11.version>0.11.0.2</kafka_2.11.version>
        <jackson.version>2.9.8</jackson.version>
        <hadoop.version>2.8.3</hadoop.version>
        <slf4j.version>1.7.25</slf4j.version>
        <guava.version>23.0</guava.version>
        <junit-jupiter.version>5.0.3</junit-jupiter.version>
        <assertj-core.version>3.9.0</assertj-core.version>
        <mockito.version>2.15.0</mockito.version>
        <awaitility.version>3.1.0</awaitility.version>
        <junit-platform-surefire-provider.version>1.0.3</junit-platform-surefire-provider.version>
        <junit-jupiter-engine.version>5.0.3</junit-jupiter-engine.version>
        <maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
        <maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
        <maven-dependency-plugin.version>2.9</maven-dependency-plugin.version>
        <maven-toolchains-plugin.version>1.1</maven-toolchains-plugin.version>
        <maven-shade-plugin.version>3.1.0</maven-shade-plugin.version>
        <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
        <github-release-plugin.version>1.1.1</github-release-plugin.version>
        <twitter-maven-plugin.version>1.0.1</twitter-maven-plugin.version>
        <docker-maven-plugin.version>0.23.0</docker-maven-plugin.version>
        <flink-runtime-scope>provided</flink-runtime-scope>
        <service.jar>${project.build.finalName}.${project.packaging}</service.jar>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
            <scope>${flink-runtime-scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-java</artifactId>
            <version>${flink.version}</version>
            <scope>${flink-runtime-scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-clients_2.11</artifactId>
            <version>${flink.version}</version>
            <scope>${flink-runtime-scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-streaming-java_2.11</artifactId>
            <version>${flink.version}</version>
            <scope>${flink-runtime-scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-connector-kafka-0.11_2.11</artifactId>
            <version>${flink.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-connector-filesystem_2.11</artifactId>
            <version>${flink.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
            <scope>${flink-runtime-scope}</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
            <scope>${flink-runtime-scope}</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
            <scope>${flink-runtime-scope}</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-cbor</artifactId>
            <version>${jackson.version}</version>
            <scope>${flink-runtime-scope}</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
            <version>${jackson.version}</version>
            <scope>${flink-runtime-scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-aws</artifactId>
            <version>${hadoop.version}</version>
            <scope>${flink-runtime-scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-auth</artifactId>
            <version>${hadoop.version}</version>
            <scope>${flink-runtime-scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-hdfs</artifactId>
            <version>${hadoop.version}</version>
            <scope>${flink-runtime-scope}</scope>
            <exclusions>
                <exclusion>
                    <!-- exclude this dependency because it conflicts with wiremock -->
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
                <exclusion>
                    <!-- exclude this dependency because it conflicts with flink -->
                    <groupId>xml-api</groupId>
                    <artifactId>xml-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>${hadoop.version}</version>
            <scope>${flink-runtime-scope}</scope>
            <exclusions>
                <exclusion>
                    <!-- exclude this dependency because it conflicts with wiremock -->
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
            <scope>${flink-runtime-scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj-core.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>
      </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-toolchains-plugin</artifactId>
                <version>${maven-toolchains-plugin.version}</version>
                <configuration>
                    <toolchains>
                        <jdk>
                            <version>${java.version}</version>
                        </jdk>
                    </toolchains>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>toolchain</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-surefire-provider</artifactId>
                        <version>${junit-platform-surefire-provider.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>${junit-jupiter-engine.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven-shade-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <shadedArtifactAttached>false</shadedArtifactAttached>
                    <artifactSet>
                        <includes>
                            <include>*:*</include>
                        </includes>
                    </artifactSet>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeScope>compile</includeScope>
                            <includeScope>runtime</includeScope>
                            <excludeScope>test</excludeScope>
                            <outputDirectory>${project.build.directory}/jars/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker-maven-plugin.version}</version>
                <configuration>
                    <images>
                        <image>
                            <registry>docker.io</registry>
                            <alias>workshop-flink</alias>
                            <name>workshop-flink:${project.version}</name>
                            <build>
                                <dockerFileDir>${project.basedir}/src/main/docker</dockerFileDir>
                                <filter>${*}</filter>
                                <assembly>
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                            </build>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>push</id>
                        <phase>none</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>local</id>
            <activation>
                <property>
                    <name>local</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <!-- we need to include the Flink runtime when running from IntelliJ -->
                <flink-runtime-scope>compile</flink-runtime-scope>
            </properties>
        </profile>
        <profile>
            <id>github</id>
            <activation>
                <property>
                    <name>channel</name>
                    <value>github</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>de.jutzig</groupId>
                        <artifactId>github-release-plugin</artifactId>
                        <version>${github-release-plugin.version}</version>
                        <configuration>
                            <releaseName>${project.name} ${project.version}</releaseName>
                            <tag>v${project.version}</tag>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>twitter</id>
            <activation>
                <property>
                    <name>channel</name>
                    <value>twitter</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.nextbreakpoint</groupId>
                        <artifactId>twitter-maven-plugin</artifactId>
                        <version>${twitter-maven-plugin.version}</version>
                        <configuration>
                            <debug>false</debug>
                            <oauthConsumerKey>${consumerKey}</oauthConsumerKey>
                            <oauthConsumerSecret>${consumerSecret}</oauthConsumerSecret>
                            <oauthAccessToken>${accessToken}</oauthAccessToken>
                            <oauthAccessTokenSecret>${accessTokenSecret}</oauthAccessTokenSecret>
                            <status>Version ${project.version} of ${project.name} has been released! ${project.url}</status>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
